/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hvan.qlkh.views;

import hvan.qlkh.controllers.UserController;
import hvan.qlkh.models.User;
import hvan.qlkh.services.Services;
import hvan.qlkh.utils.PasswordField;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import org.apache.commons.codec.digest.DigestUtils;

/**
 *
 * @author Nguyễn Phan Hoài Nam
 */

public class App extends javax.swing.JFrame {

    private static App instance;
    private User user;
    private boolean check = true;
    Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
    CardLayout layout;

    private void initApp(){
        layout = (CardLayout) app.getLayout();
        app.add(Main.getInstance(), "app__Main");
    }

    private App() {
        initComponents();
        initApp();
    }

    public static App getInstance(){
        if(instance == null){
            instance = new App();
        }
        return instance;
    }

    private void resetSignIn(){
        signIn__UsernameInput.setText("");
        signIn__PasswordInput.setText("");
        signIn__Alert.setText("");
    }

    private void resetSignUp(){
        signUp__UsernameInput.setText("");
        signUp__PasswordInput.setText("");
        signUp__RetypeInput.setText("");
        signUp__Alert.setText("");
    }

    public void showMessage(String message, boolean type) {
        if (type){
            JOptionPane.showMessageDialog(null, message, "Thành công", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            JOptionPane.showMessageDialog(null, message, "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        app = new javax.swing.JPanel();
        app__SignIn = new javax.swing.JPanel();
        signIn = new hvan.qlkh.utils.Panel(50);
        signIn__Title = new javax.swing.JLabel();
        signIn__Username = new javax.swing.JLabel();
        signIn__UsernameInput = new hvan.qlkh.utils.TextField(12, new Color(0, 0, 0, 30));
        signIn__Password = new javax.swing.JLabel();
        signIn__Button = new hvan.qlkh.utils.Button(35, new Color(76, 175, 79, 200), new Color(76, 175, 79), new Color(56, 142, 59));
        signIn__Description = new javax.swing.JLabel();
        signIn__PasswordInput = new PasswordField(15, new Color(0, 0, 0, 30));
        signIn__SwitchTitle = new javax.swing.JLabel();
        signIn__Switch = new javax.swing.JLabel();
        signIn__Alert = new javax.swing.JLabel();
        app__SignUp = new javax.swing.JPanel();
        signUp = new hvan.qlkh.utils.Panel(50);
        signUp__Title = new javax.swing.JLabel();
        signUp__Username = new javax.swing.JLabel();
        signUp__UsernameInput = new hvan.qlkh.utils.TextField(12, new Color(0, 0, 0, 30));
        signUp__Password = new javax.swing.JLabel();
        signUp__Retype = new javax.swing.JLabel();
        signUp__Button = new hvan.qlkh.utils.Button(35, new Color(76, 175, 79, 200), new Color(76, 175, 79), new Color(56, 142, 59));
        signUp__Description = new javax.swing.JLabel();
        signUp__PasswordInput = new PasswordField(15, new Color(0, 0, 0, 30));
        signUp__RetypeInput = new PasswordField(15, new Color(0, 0, 0, 30));
        signUp__SwitchTitle = new javax.swing.JLabel();
        signUp__Switch = new javax.swing.JLabel();
        signUp__Alert = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation((int) ((dimension.getWidth() - 1175) / 2), (int)((dimension.getHeight() - 880) / 2));
        getContentPane().setLayout(new java.awt.CardLayout());

        app.setBackground(new java.awt.Color(255, 255, 255));
        app.setPreferredSize(new java.awt.Dimension(1175, 800));
        app.setLayout(new java.awt.CardLayout());

        app__SignIn.setBackground(new Color(76, 175, 79, 200));
        app__SignIn.setPreferredSize(new java.awt.Dimension(1200, 800));
        app__SignIn.setLayout(new java.awt.GridBagLayout());

        signIn.setBackground(new java.awt.Color(246, 251, 249));
        signIn.setPreferredSize(new java.awt.Dimension(550, 580));

        signIn__Title.setText("<html><div style=\"text-align: center; color: rgba(33, 43, 39, 0.7); font-size: 30px; font-family: Karla; font-weight: 550; line-height: 45px; word-wrap: break-word\">Đăng nhập</div></html>");

        signIn__Username.setText("<html><div style=\"width: 150px; text-align: left; color:rgba(33, 43, 39, 0.7); font-size: 15px; font-family: Karla; font-weight: 500; line-height: 19.50px; word-wrap: break-word\">Tên tài khoản</div></html>");

        signIn__UsernameInput.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        signIn__UsernameInput.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                signIn__UsernameInputCaretUpdate(evt);
            }
        });
        signIn__UsernameInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                signIn__UsernameInputKeyPressed(evt);
            }
        });

        signIn__Password.setText("<html><div style=\"width:150px; text-align: left; color:rgba(33, 43, 39, 0.7); font-size: 15px; font-family: Karla; font-weight: 500; line-height: 19.50px; word-wrap: break-word\">Mật khẩu</div></html>");

        signIn__Button.setBackground(new Color(76, 175, 79, 200));
        signIn__Button.setText("<html><div style=\"text-align: center; color:white; font-size: 22px; font-family: Karla; font-weight: 700; line-height: 28.60px; word-wrap: break-word\">Đăng nhập</div></html>");
        signIn__Button.setBorder(null);
        signIn__Button.setBorderPainted(false);
        signIn__Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                signIn__ButtonMouseClicked(evt);
            }
        });

        signIn__Description.setText("<html><div style=\"width: 320px; text-align: center; color: #32403B; font-size: 15px; font-family: Karla; font-weight: 400; line-height: 19.50px; word-wrap: break-word\">Vui lòng đăng nhập vào tài khoản để sử dụng các dịch vụ của chúng tôi.</div></html>");

        signIn__PasswordInput.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        signIn__PasswordInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                signIn__PasswordInputKeyPressed(evt);
            }
        });

        signIn__SwitchTitle.setText("<html><div style=\"text-align: center\"><span style=\"color: #32403B; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\">Bạn chưa có tài khoản?</div></html>");

        signIn__Switch.setText("<html><span style=\"color: #32403B; font-size: 14px; font-family: Karla; font-weight: 400; text-decoration: underline; line-height: 18.20px; word-wrap: break-word\">Đăng ký</span></html>");
        signIn__Switch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                signIn__SwitchMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                signIn__SwitchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                signIn__SwitchMouseExited(evt);
            }
        });

        signIn__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\"></div></html>");

        javax.swing.GroupLayout signInLayout = new javax.swing.GroupLayout(signIn);
        signIn.setLayout(signInLayout);
        signInLayout.setHorizontalGroup(
            signInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(signInLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(signInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(signIn__Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(signIn__Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(signIn__UsernameInput)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, signInLayout.createSequentialGroup()
                        .addComponent(signIn__Description, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addComponent(signIn__PasswordInput, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(signIn__Alert))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, signInLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(signIn__Button, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(signInLayout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(signIn__SwitchTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(signIn__Switch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(signInLayout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addComponent(signIn__Title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        signInLayout.setVerticalGroup(
            signInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(signInLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(signIn__Title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(signIn__Description, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(signIn__Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(signIn__UsernameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(signIn__Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(signIn__PasswordInput, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(signIn__Alert, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(signIn__Button, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(signInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(signIn__SwitchTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(signIn__Switch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );

        app__SignIn.add(signIn, new java.awt.GridBagConstraints());

        app.add(app__SignIn, "app__SignIn");

        app__SignUp.setBackground(new Color(76, 175, 79, 200));
        app__SignUp.setLayout(new java.awt.GridBagLayout());

        signUp.setBackground(new java.awt.Color(246, 251, 249));
        signUp.setPreferredSize(new java.awt.Dimension(550, 690));

        signUp__Title.setText("<html><div style=\"width: 354px; text-align: center; color: rgba(33, 43, 39, 0.7); font-size: 30px; font-family: Karla; font-weight: 550; line-height: 45px; word-wrap: break-word\">Tạo tài khoản mới</div></html>");

        signUp__Username.setText("<html><div style=\"width: 150px; text-align: left; color:rgba(33, 43, 39, 0.7); font-size: 15px; font-family: Karla; font-weight: 500; line-height: 19.50px; word-wrap: break-word\">Tên tài khoản</div></html>");

        signUp__UsernameInput.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        signUp__UsernameInput.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                signUp__UsernameInputCaretUpdate(evt);
            }
        });
        signUp__UsernameInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                signUp__UsernameInputKeyPressed(evt);
            }
        });

        signUp__Password.setText("<html><div style=\"width:150px; text-align: left; color:rgba(33, 43, 39, 0.7); font-size: 15px; font-family: Karla; font-weight: 500; line-height: 19.50px; word-wrap: break-word\">Mật khẩu</div></html>");

        signUp__Retype.setText("<html><div style=\"width:150px; text-align: left; color:rgba(33, 43, 39, 0.7); font-size: 15px; font-family: Karla; font-weight: 500; line-height: 19.50px; word-wrap: break-word\">Nhập lại mật khẩu</div></html>");

        signUp__Button.setBackground(new Color(76, 175, 79, 200));
        signUp__Button.setText("<html><div style=\"text-align: center; color:white; font-size: 22px; font-family: Karla; font-weight: 700; line-height: 28.60px; word-wrap: break-word\">Tạo tài khoản</div></html>");
        signUp__Button.setBorder(null);
        signUp__Button.setBorderPainted(false);
        signUp__Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                signUp__ButtonMouseClicked(evt);
            }
        });

        signUp__Description.setText("<html><div style=\"width: 320px; text-align: center; color: #32403B; font-size: 15px; font-family: Karla; font-weight: 400; line-height: 19.50px; word-wrap: break-word\">Tạo tài khoản để sử dụng các dịch vụ của chúng tôi. Nó hoàn toàn miễn phí!</div></html>");

        signUp__PasswordInput.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        signUp__PasswordInput.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                signUp__PasswordInputCaretUpdate(evt);
            }
        });
        signUp__PasswordInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                signUp__PasswordInputKeyPressed(evt);
            }
        });

        signUp__RetypeInput.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        signUp__RetypeInput.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                signUp__RetypeInputCaretUpdate(evt);
            }
        });
        signUp__RetypeInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                signUp__RetypeInputKeyPressed(evt);
            }
        });

        signUp__SwitchTitle.setText("<html><div style=\"text-align: center\"><span style=\"color: #32403B; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\">Bạn đã có tài khoản?</div></html>");

        signUp__Switch.setText("<html><span style=\"color: #32403B; font-size: 14px; font-family: Karla; font-weight: 400; text-decoration: underline; line-height: 18.20px; word-wrap: break-word\">Đăng nhập</span></html>");
        signUp__Switch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                signUp__SwitchMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                signUp__SwitchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                signUp__SwitchMouseExited(evt);
            }
        });

        signUp__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\"></div></html>");

        javax.swing.GroupLayout signUpLayout = new javax.swing.GroupLayout(signUp);
        signUp.setLayout(signUpLayout);
        signUpLayout.setHorizontalGroup(
            signUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, signUpLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(signUp__Button, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(signUpLayout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(signUp__SwitchTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(signUp__Switch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(signUpLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(signUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(signUp__Retype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(signUp__Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(signUp__Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(signUp__UsernameInput)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, signUpLayout.createSequentialGroup()
                        .addComponent(signUp__Description, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addComponent(signUp__PasswordInput)
                    .addComponent(signUp__Alert)
                    .addComponent(signUp__RetypeInput)
                    .addComponent(signUp__Title))
                .addGap(45, 45, 45))
        );
        signUpLayout.setVerticalGroup(
            signUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(signUpLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(signUp__Title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(signUp__Description, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(signUp__Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(signUp__UsernameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(signUp__Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(signUp__PasswordInput, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(signUp__Retype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(signUp__RetypeInput, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(signUp__Alert, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(signUp__Button, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(signUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(signUp__SwitchTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(signUp__Switch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        app__SignUp.add(signUp, new java.awt.GridBagConstraints());

        app.add(app__SignUp, "app__SignUp");

        getContentPane().add(app, "card2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void signIn__UsernameInputCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_signIn__UsernameInputCaretUpdate
        try {
            user = Services.getInstance().findByUsername(signIn__UsernameInput.getText());
            if (user != null){
                signIn__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\"></div></html>");
            }
            else{
                user = null;
                signIn__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\">Tài khoản này không tồn tại!</div></html>");
            }
        } catch (IOException ex) {
            //
        }
    }//GEN-LAST:event_signIn__UsernameInputCaretUpdate

    @SuppressWarnings("deprecation")
    private void signIn__ButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signIn__ButtonMouseClicked
        if (signIn__UsernameInput.getText().equals("")){
            signIn__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\">Tên tài khoản không được để trống!</div></html>");
        }
        else{
            if (signIn__PasswordInput.getText().equals("")){
                signIn__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\">Bạn đã nhập sai mật khẩu cho tài khoản này!</div></html>");
            }
        }
        if (user != null){
            String md5Hex = DigestUtils.md5Hex(signIn__PasswordInput.getText());
            if (md5Hex.equals(user.getPassword())){
                if (user.isRead()){
                    layout.show(app, "app__Main");
                    try {
                        Services.getInstance().setCurrentUser(user);
                    } catch (IOException ex) {
                    }
                    signIn__UsernameInput.setText("");
                    signIn__PasswordInput.setText("");
                    signIn__Alert.setText("");
                    UserController.getInstance().initMain();
                }
                else{
                    showMessage("Bạn chưa được cấp quyền để truy cập vào ứng dụng", false);
                }
            }
            else{
                signIn__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\">Bạn đã nhập sai mật khẩu cho tài khoản này!</div></html>");
            }
        }
    }//GEN-LAST:event_signIn__ButtonMouseClicked

    private void signIn__SwitchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signIn__SwitchMouseClicked
        layout.show(app, "app__SignUp");
        resetSignIn();
    }//GEN-LAST:event_signIn__SwitchMouseClicked

    private void signIn__SwitchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signIn__SwitchMouseEntered
        signIn__Switch.setText("<html><span style=\"color:rgba(76,175,79,0.8); font-size: 14px; font-family: Karla; font-weight: 400; text-decoration: underline; line-height: 18.20px; word-wrap: break-word\">Đăng ký</span></html>");
    }//GEN-LAST:event_signIn__SwitchMouseEntered

    private void signIn__SwitchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signIn__SwitchMouseExited
        signIn__Switch.setText("<html><span style=\"color: #32403B; font-size: 14px; font-family: Karla; font-weight: 400; text-decoration: underline; line-height: 18.20px; word-wrap: break-word\">Đăng ký</span></html>");
    }//GEN-LAST:event_signIn__SwitchMouseExited

    private void signUp__UsernameInputCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_signUp__UsernameInputCaretUpdate
        Pattern pattern = Pattern.compile("^[a-zA-Z0-9_-]{5,15}$");
        if (pattern.matcher(signUp__UsernameInput.getText()).find()){
            try {
                if (Services.getInstance().findByUsername(signUp__UsernameInput.getText()) == null){
                    check = true;
                    signUp__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\"></div></html>");
                }
                else{
                    check = false;
                    signUp__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\">Tên tài khoản đã tồn tại!</div></html>");
                }
            } catch (IOException ex) {
            }
        }
        else{
            check = false;
            signUp__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\">Tên tài khoản dài từ 5 - 15 ký tự và không chứa ký tự đặc biệt!</div></html>");
        }
    }//GEN-LAST:event_signUp__UsernameInputCaretUpdate

    @SuppressWarnings("deprecation")
    private void signUp__ButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signUp__ButtonMouseClicked
        if (signUp__UsernameInput.getText().equals("")){
            if(check){
                check = false;
                signUp__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\">Tên tài khoản dài từ 5 - 15 ký tự và không chứa ký tự đặc biệt!</div></html>");
            }
        }
        else{
            if (signUp__PasswordInput.getText().equals("")){
                if (check){
                    check = false;
                    signUp__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\">Mật khẩu dài hơn 8 ký tự và chứa ký tự số, chữ cái!</div></html>");
                }
            }
            else{
                if (signUp__RetypeInput.getText().equals("")){
                    if (check){
                        check = false;
                        signUp__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\">Mật khẩu và nhập lại mật khẩu không khớp!</div></html>");
                    }
                }
                else{
                    signUp__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\"></div></html>");
                }
            }
        }
        if (check){
            User temp = new User(signUp__UsernameInput.getText(), signUp__PasswordInput.getText());
            try {
                Services.getInstance().createUser(temp);
            } catch (IOException ex) {
            }
            layout.show(app, "app__SignIn");
            resetSignUp();
        }
    }//GEN-LAST:event_signUp__ButtonMouseClicked

    @SuppressWarnings("deprecation")
    private void signUp__PasswordInputCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_signUp__PasswordInputCaretUpdate
        Pattern pattern = Pattern.compile("^(?=.*\\d)(?=.*[a-zA-Z]).{8,}$");
        if (pattern.matcher(signUp__PasswordInput.getText()).find()){
            check = true;
            signUp__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\"></div></html>");
        }
        else{
            check = false;
            signUp__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\">Mật khẩu dài hơn 8 ký tự và chứa ký tự số, chữ cái!</div></html>");
        }
    }//GEN-LAST:event_signUp__PasswordInputCaretUpdate

    @SuppressWarnings("deprecation")
    private void signUp__RetypeInputCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_signUp__RetypeInputCaretUpdate
        if(signUp__PasswordInput.getText().equals(signUp__RetypeInput.getText())){
            check = true;
            signUp__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\"></div></html>");
        }
        else{
            check = false;
            signUp__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\">Mật khẩu và nhập lại mật khẩu không khớp!</div></html>");
        }
    }//GEN-LAST:event_signUp__RetypeInputCaretUpdate

    private void signUp__SwitchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signUp__SwitchMouseEntered
        signUp__Switch.setText("<html><span style=\"color:rgba(76,175,79,0.8); font-size: 14px; font-family: Karla; font-weight: 400; text-decoration: underline; line-height: 18.20px; word-wrap: break-word\">Đăng nhập</span></html>");
    }//GEN-LAST:event_signUp__SwitchMouseEntered

    private void signUp__SwitchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signUp__SwitchMouseExited
        signUp__Switch.setText("<html><span style=\"color: #32403B; font-size: 14px; font-family: Karla; font-weight: 400; text-decoration: underline; line-height: 18.20px; word-wrap: break-word\">Đăng nhập</span></html>");
    }//GEN-LAST:event_signUp__SwitchMouseExited

    private void signUp__SwitchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signUp__SwitchMouseClicked
        layout.show(app, "app__SignIn");
        resetSignUp();
    }//GEN-LAST:event_signUp__SwitchMouseClicked

    @SuppressWarnings("deprecation")
    private void signIn__PasswordInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_signIn__PasswordInputKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (signIn__UsernameInput.getText().equals("")){
                signIn__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\">Tên tài khoản không được để trống!</div></html>");
            }
            else{
                if (signIn__PasswordInput.getText().equals("")){
                    signIn__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\">Bạn đã nhập sai mật khẩu cho tài khoản này!</div></html>");
                }
            }
            if (user != null){
                String md5Hex = DigestUtils.md5Hex(signIn__PasswordInput.getText());
                if (md5Hex.equals(user.getPassword())){
                    if (user.isRead()){
                        layout.show(app, "app__Main");
                        try {
                            Services.getInstance().setCurrentUser(user);
                        } catch (IOException ex) {
                        }
                        signIn__UsernameInput.setText("");
                        signIn__PasswordInput.setText("");
                        signIn__Alert.setText("");
                        UserController.getInstance().initMain();
                    }
                    else{
                        showMessage("Bạn chưa được cấp quyền để truy cập vào ứng dụng", false);
                    }
                }
                else{
                    signIn__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\">Bạn đã nhập sai mật khẩu cho tài khoản này!</div></html>");
                }
            }
        }
    }//GEN-LAST:event_signIn__PasswordInputKeyPressed

    @SuppressWarnings("deprecation")
    private void signIn__UsernameInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_signIn__UsernameInputKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (signIn__UsernameInput.getText().equals("")){
                signIn__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\">Tên tài khoản không được để trống!</div></html>");
            }
            else{
                if (signIn__PasswordInput.getText().equals("")){
                    signIn__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\">Bạn đã nhập sai mật khẩu cho tài khoản này!</div></html>");
                }
            }
            if (user != null){
                String md5Hex = DigestUtils.md5Hex(signIn__PasswordInput.getText());
                if (md5Hex.equals(user.getPassword())){
                    if (user.isRead()){
                        layout.show(app, "app__Main");
                        try {
                            Services.getInstance().setCurrentUser(user);
                        } catch (IOException ex) {
                        }
                        signIn__UsernameInput.setText("");
                        signIn__PasswordInput.setText("");
                        signIn__Alert.setText("");
                        UserController.getInstance().initMain();
                    }
                    else{
                        showMessage("Bạn chưa được cấp quyền để truy cập vào ứng dụng", false);
                    }
                }
                else{
                    signIn__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\">Bạn đã nhập sai mật khẩu cho tài khoản này!</div></html>");
                }
            }
        }
    }//GEN-LAST:event_signIn__UsernameInputKeyPressed

    @SuppressWarnings("deprecation")
    private void signUp__UsernameInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_signUp__UsernameInputKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (signUp__UsernameInput.getText().equals("")){
                if(check){
                    check = false;
                    signUp__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\">Tên tài khoản dài từ 5 - 15 ký tự và không chứa ký tự đặc biệt!</div></html>");
                }
            }
            else{
                if (signUp__PasswordInput.getText().equals("")){
                    if (check){
                        check = false;
                        signUp__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\">Mật khẩu dài hơn 8 ký tự và chứa ký tự số, chữ cái!</div></html>");
                    }
                }
                else{
                    if (signUp__RetypeInput.getText().equals("")){
                        if (check){
                            check = false;
                            signUp__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\">Mật khẩu và nhập lại mật khẩu không khớp!</div></html>");
                        }
                    }
                    else{
                        signUp__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\"></div></html>");
                    }
                }
            }
            if (check){
            User temp = new User(signUp__UsernameInput.getText(), signUp__PasswordInput.getText());
            try {
                Services.getInstance().createUser(temp);
            } catch (IOException ex) {
            }
            layout.show(app, "app__SignIn");
            resetSignUp();
            }
        }
    }//GEN-LAST:event_signUp__UsernameInputKeyPressed

    @SuppressWarnings("deprecation")
    private void signUp__PasswordInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_signUp__PasswordInputKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (signUp__UsernameInput.getText().equals("")){
                if(check){
                    check = false;
                    signUp__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\">Tên tài khoản dài từ 5 - 15 ký tự và không chứa ký tự đặc biệt!</div></html>");
                }
            }
            else{
                if (signUp__PasswordInput.getText().equals("")){
                    if (check){
                        check = false;
                        signUp__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\">Mật khẩu dài hơn 8 ký tự và chứa ký tự số, chữ cái!</div></html>");
                    }
                }
                else{
                    if (signUp__RetypeInput.getText().equals("")){
                        if (check){
                            check = false;
                            signUp__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\">Mật khẩu và nhập lại mật khẩu không khớp!</div></html>");
                        }
                    }
                    else{
                        signUp__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\"></div></html>");
                    }
                }
            }
            if (check){
                User temp = new User(signUp__UsernameInput.getText(), signUp__PasswordInput.getText());
                try {
                    Services.getInstance().createUser(temp);
                } catch (IOException ex) {
                }
                layout.show(app, "app__SignIn");
                resetSignUp();
            }
        }
    }//GEN-LAST:event_signUp__PasswordInputKeyPressed

    @SuppressWarnings("deprecation")
    private void signUp__RetypeInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_signUp__RetypeInputKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (signUp__UsernameInput.getText().equals("")){
                if(check){
                    check = false;
                    signUp__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\">Tên tài khoản dài từ 5 - 15 ký tự và không chứa ký tự đặc biệt!</div></html>");
                }
            }
            else{
                if (signUp__PasswordInput.getText().equals("")){
                    if (check){
                        check = false;
                        signUp__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\">Mật khẩu dài hơn 8 ký tự và chứa ký tự số, chữ cái!</div></html>");
                    }
                }
                else{
                    if (signUp__RetypeInput.getText().equals("")){
                        if (check){
                            check = false;
                            signUp__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\">Mật khẩu và nhập lại mật khẩu không khớp!</div></html>");
                        }
                    }
                    else{
                        signUp__Alert.setText("<html><div style=\"text-align: center; width: 354px; color: red; font-size: 12px; font-family: Karla; font-weight: 400; line-height: 16px; word-wrap: break-word\"></div></html>");
                    }
                }
            }
            if (check){
                User temp = new User(signUp__UsernameInput.getText(), signUp__PasswordInput.getText());
                try {
                    Services.getInstance().createUser(temp);
                } catch (IOException ex) {
                }
                layout.show(app, "app__SignIn");
                resetSignUp();
            }
        }
    }//GEN-LAST:event_signUp__RetypeInputKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new App().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel app;
    private javax.swing.JPanel app__SignIn;
    private javax.swing.JPanel app__SignUp;
    private javax.swing.JPanel signIn;
    private javax.swing.JLabel signIn__Alert;
    private javax.swing.JButton signIn__Button;
    private javax.swing.JLabel signIn__Description;
    private javax.swing.JLabel signIn__Password;
    private javax.swing.JPasswordField signIn__PasswordInput;
    private javax.swing.JLabel signIn__Switch;
    private javax.swing.JLabel signIn__SwitchTitle;
    private javax.swing.JLabel signIn__Title;
    private javax.swing.JLabel signIn__Username;
    private javax.swing.JTextField signIn__UsernameInput;
    private javax.swing.JPanel signUp;
    private javax.swing.JLabel signUp__Alert;
    private javax.swing.JButton signUp__Button;
    private javax.swing.JLabel signUp__Description;
    private javax.swing.JLabel signUp__Password;
    private javax.swing.JPasswordField signUp__PasswordInput;
    private javax.swing.JLabel signUp__Retype;
    private javax.swing.JPasswordField signUp__RetypeInput;
    private javax.swing.JLabel signUp__Switch;
    private javax.swing.JLabel signUp__SwitchTitle;
    private javax.swing.JLabel signUp__Title;
    private javax.swing.JLabel signUp__Username;
    private javax.swing.JTextField signUp__UsernameInput;
    // End of variables declaration//GEN-END:variables
}
